{
  "info": {
    "name": "serverless-methods-multi-tenant",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "GET /v1/organisations",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", () => {",
              "  pm.response.to.have.status(404);",
              "});",
              "",
              "pm.test(\"response body is error message\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData).to.eql({",
              "    \"errors\": [",
              "      {",
              "        \"status\": \"404\",",
              "        \"title\": \"Not Found\",",
              "        \"detail\": \"No matching record found\",",
              "        \"code\": \"E0015\",",
              "        \"meta\": \"E0015:No matching record found\"",
              "      }",
              "    ]",
              "  });",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/organisations",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "organisations"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /v1/users",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", () => {",
              "  pm.response.to.have.status(404);",
              "});",
              "",
              "pm.test(\"response body is error message\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData).to.eql({",
              "    \"errors\": [",
              "      {",
              "        \"status\": \"404\",",
              "        \"title\": \"Not Found\",",
              "        \"detail\": \"No matching record found\",",
              "        \"code\": \"E0015\",",
              "        \"meta\": \"E0015:No matching record found\"",
              "      }",
              "    ]",
              "  });",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/users",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /v1/permissions",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", () => {",
              "  pm.response.to.have.status(404);",
              "});",
              "",
              "pm.test(\"response body is error message\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData).to.eql({",
              "    \"errors\": [",
              "      {",
              "        \"status\": \"404\",",
              "        \"title\": \"Not Found\",",
              "        \"detail\": \"No matching record found\",",
              "        \"code\": \"E0015\",",
              "        \"meta\": \"E0015:No matching record found\"",
              "      }",
              "    ]",
              "  });",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/permissions",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "permissions"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /v1/account-{{tenant1}}/tags",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", () => {",
              "  pm.response.to.have.status(404);",
              "});",
              "",
              "pm.test(\"response body is error message\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData).to.eql({",
              "    \"errors\": [",
              "      {",
              "        \"status\": \"404\",",
              "        \"title\": \"Not Found\",",
              "        \"detail\": \"No matching record found\",",
              "        \"code\": \"E0015\",",
              "        \"meta\": \"E0015:No matching record found\"",
              "      }",
              "    ]",
              "  });",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/account-{{tenant1}}/tags",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "account-{{tenant1}}",
            "tags"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /v1/account-{{tenant2}}/tags",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", () => {",
              "  pm.response.to.have.status(404);",
              "});",
              "",
              "pm.test(\"response body is error message\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData).to.eql({",
              "    \"errors\": [",
              "      {",
              "        \"status\": \"404\",",
              "        \"title\": \"Not Found\",",
              "        \"detail\": \"No matching record found\",",
              "        \"code\": \"E0015\",",
              "        \"meta\": \"E0015:No matching record found\"",
              "      }",
              "    ]",
              "  });",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/account-{{tenant2}}/tags",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "account-{{tenant2}}",
            "tags"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /v1/organisations",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", () => {",
              "  pm.response.to.have.status(201);",
              "});",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"tenant1.id\", jsonData.organisations[0].id);",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"organisations\": {\n    \"name\": \"tenant1\",\n    \"config\": {\n      \"address\": \"newLane st.\"\n    },\n    \"links\": {}\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/organisations",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "organisations"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /v1/organisations",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", () => {",
              "  pm.response.to.have.status(201);",
              "});",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"tenant2.id\", jsonData.organisations[0].id);",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"organisations\": {\n    \"name\": \"tenant2\",\n    \"config\": {\n      \"address\": \"newLane st.\"\n    },\n    \"links\": {}\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/organisations",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "organisations"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /v1/organisations",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", () => {",
              "  pm.response.to.have.status(201);",
              "});",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"tenant3.id\", jsonData.organisations[0].id);",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"organisations\": {\n    \"name\": \"tenant3\",\n    \"config\": {\n      \"address\": \"newLane st.\"\n    },\n    \"links\": {}\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/organisations",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "organisations"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /v1/users",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", () => {",
              "  pm.response.to.have.status(201);",
              "});",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"ash.id\", jsonData.users[0].id);",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"users\": {\n    \"id\": \"ash@serverlesstest.com\",\n    \"attributes\": {\n      \"language\": \"en\"\n    },\n    \"links\": {}\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/users",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /v1/users",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", () => {",
              "  pm.response.to.have.status(201);",
              "});",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"max.id\", jsonData.users[0].id);",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"users\": {\n    \"id\": \"max@serverlesstest.com\",\n    \"attributes\": {\n      \"language\": \"en\"\n    },\n    \"links\": {}\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/users",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /v1/users",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", () => {",
              "  pm.response.to.have.status(201);",
              "});",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"ronie.id\", jsonData.users[0].id);",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"users\": {\n    \"id\": \"ronie@serverlesstest.com\",\n    \"attributes\": {\n      \"language\": \"en\"\n    },\n    \"links\": {}\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/users",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /v1/users",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", () => {",
              "  pm.response.to.have.status(201);",
              "});",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"ronald.id\", jsonData.users[0].id);",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"users\": {\n    \"id\": \"ronald@serverlesstest.com\",\n    \"attributes\": {\n      \"language\": \"en\"\n    },\n    \"links\": {}\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/users",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /v1/permissions",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", () => {",
              "  pm.response.to.have.status(201);",
              "});",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"ashPermission.id\", jsonData.permissions[0].id);",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"permissions\": {\n    \"role\": \"USER\",\n    \"links\": {\n      \"organisations\": \"{{tenant1.id}}\",\n      \"users\": \"{{ash.id}}\"\n    }\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/permissions",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "permissions"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /v1/permissions",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", () => {",
              "  pm.response.to.have.status(201);",
              "});",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"maxPermission.id\", jsonData.permissions[0].id);",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"permissions\": {\n    \"role\": \"ADMIN\",\n    \"links\": {\n      \"organisations\": \"{{tenant2.id}}\",\n      \"users\": \"{{max.id}}\"\n    }\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/permissions",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "permissions"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /v1/permissions",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", () => {",
              "  pm.response.to.have.status(201);",
              "});",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"ronaldPermission.id\", jsonData.permissions[0].id);",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"permissions\": {\n    \"role\": \"ADMIN\",\n    \"links\": {\n      \"organisations\": \"{{tenant1.id}}\",\n      \"users\": \"{{ronald.id}}\"\n    }\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/permissions",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "permissions"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /v1/permissions",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", () => {",
              "  pm.response.to.have.status(201);",
              "});",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"ronaldPermission2.id\", jsonData.permissions[0].id);",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"permissions\": {\n    \"role\": \"USER\",\n    \"links\": {\n      \"organisations\": \"{{tenant2.id}}\",\n      \"users\": \"{{ronald.id}}\"\n    }\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/permissions",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "permissions"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /v1/account-{{tenant1}}/tags",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", () => {",
              "  pm.response.to.have.status(201);",
              "});",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"t1tag1.id\", jsonData.tags[0].id);",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"tags\": {\n    \"name\": \"tag1\",\n    \"config\": {\n      \"language\": \"en\"\n    },\n    \"links\": {\n      \"organisations\": \"{{tenant1.id}}\"\n    }\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/account-{{tenant1}}/tags",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "account-{{tenant1}}",
            "tags"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /v1/account-{{tenant1}}/tags",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", () => {",
              "  pm.response.to.have.status(201);",
              "});",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"t1tag2.id\", jsonData.tags[0].id);",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"tags\": {\n    \"name\": \"tag2\",\n    \"config\": {\n      \"language\": \"en\"\n    },\n    \"links\": {\n      \"organisations\": \"{{tenant1.id}}\"\n    }\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/account-{{tenant1}}/tags",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "account-{{tenant1}}",
            "tags"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /v1/account-{{tenant2}}/tags",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", () => {",
              "  pm.response.to.have.status(201);",
              "});",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"t2tag1.id\", jsonData.tags[0].id);",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"tags\": {\n    \"name\": \"tag1\",\n    \"config\": {\n      \"language\": \"en\"\n    },\n    \"links\": {\n      \"organisations\": \"{{tenant2.id}}\"\n    }\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/account-{{tenant2}}/tags",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "account-{{tenant2}}",
            "tags"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /v1/account-{{tenant2}}/tags",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", () => {",
              "  pm.response.to.have.status(201);",
              "});",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"t2tag3.id\", jsonData.tags[0].id);",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"tags\": {\n    \"name\": \"tag3\",\n    \"config\": {\n      \"language\": \"en\"\n    },\n    \"links\": {\n      \"organisations\": \"{{tenant2.id}}\"\n    }\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/account-{{tenant2}}/tags",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "account-{{tenant2}}",
            "tags"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PATCH /v1/organisations/{{tenant1.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.organisations[0]).to.eql({",
              "  \"name\": \"Hooli\",",
              "  \"config\": {",
              "    \"address\": \"newLane st.\",",
              "    \"country\": \"Australia\"",
              "  },",
              "  \"links\": {},",
              "  \"id\": pm.environment.get(\"tenant1.id\")",
              "});",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"organisations\": {\n    \"name\": \"Hooli\",\n    \"config\": {\n      \"address\": \"newLane st.\",\n      \"country\": \"Australia\"\n    },\n    \"links\": {},\n    \"id\": \"{{tenant1.id}}\"\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/organisations/{{tenant1.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "organisations",
            "{{tenant1.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PATCH /v1/organisations/{{tenant2.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.organisations[0]).to.eql({",
              "  \"name\": \"ITcutives\",",
              "  \"config\": {",
              "    \"address\": \"newLane st.\",",
              "    \"country\": \"India\"",
              "  },",
              "  \"links\": {},",
              "  \"id\": pm.environment.get(\"tenant2.id\")",
              "});",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"organisations\": {\n    \"name\": \"ITcutives\",\n    \"config\": {\n      \"address\": \"newLane st.\",\n      \"country\": \"India\"\n    },\n    \"links\": {},\n    \"id\": \"{{tenant2.id}}\"\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/organisations/{{tenant2.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "organisations",
            "{{tenant2.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PATCH /v1/organisations/{{tenant3.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.organisations[0]).to.eql({",
              "  \"name\": \"Phoenix\",",
              "  \"config\": {",
              "    \"address\": \"newLane st.\",",
              "    \"country\": \"Japan\"",
              "  },",
              "  \"links\": {},",
              "  \"id\": pm.environment.get(\"tenant3.id\")",
              "});",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"organisations\": {\n    \"name\": \"Phoenix\",\n    \"config\": {\n      \"address\": \"newLane st.\",\n      \"country\": \"Japan\"\n    },\n    \"links\": {},\n    \"id\": \"{{tenant3.id}}\"\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/organisations/{{tenant3.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "organisations",
            "{{tenant3.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PATCH /v1/users/{{ash.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.users[0]).to.eql({",
              "  \"id\": pm.environment.get(\"ash.id\"),",
              "  \"attributes\": {",
              "    \"language\": \"en\",",
              "    \"country\": \"Australia\"",
              "  },",
              "  \"links\": {},",
              "  \"type\": \"USER\"",
              "});",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"users\": {\n    \"id\": \"{{ash.id}}\",\n    \"attributes\": {\n      \"language\": \"en\",\n      \"country\": \"Australia\"\n    },\n    \"links\": {},\n    \"type\": \"USER\"\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/users/{{ash.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "users",
            "{{ash.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PATCH /v1/users/{{max.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.users[0]).to.eql({",
              "  \"id\": pm.environment.get(\"max.id\"),",
              "  \"attributes\": {",
              "    \"language\": \"en\",",
              "    \"country\": \"France\"",
              "  },",
              "  \"links\": {},",
              "  \"type\": \"USER\"",
              "});",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"users\": {\n    \"id\": \"{{max.id}}\",\n    \"attributes\": {\n      \"language\": \"en\",\n      \"country\": \"France\"\n    },\n    \"links\": {},\n    \"type\": \"USER\"\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/users/{{max.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "users",
            "{{max.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PATCH /v1/users/{{ronie.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.users[0]).to.eql({",
              "  \"id\": pm.environment.get(\"ronie.id\"),",
              "  \"attributes\": {",
              "    \"language\": \"en\",",
              "    \"country\": \"India\"",
              "  },",
              "  \"links\": {},",
              "  \"type\": \"USER\"",
              "});",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"users\": {\n    \"id\": \"{{ronie.id}}\",\n    \"attributes\": {\n      \"language\": \"en\",\n      \"country\": \"India\"\n    },\n    \"links\": {},\n    \"type\": \"USER\"\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/users/{{ronie.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "users",
            "{{ronie.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PATCH /v1/users/{{ronald.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.users[0]).to.eql({",
              "  \"id\": pm.environment.get(\"ronald.id\"),",
              "  \"attributes\": {",
              "    \"language\": \"en\",",
              "    \"country\": \"United Kingdom\"",
              "  },",
              "  \"links\": {},",
              "  \"type\": \"USER\"",
              "});",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"users\": {\n    \"id\": \"{{ronald.id}}\",\n    \"attributes\": {\n      \"language\": \"en\",\n      \"country\": \"United Kingdom\"\n    },\n    \"links\": {},\n    \"type\": \"USER\"\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/users/{{ronald.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "users",
            "{{ronald.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PATCH /v1/permissions/{{ashPermission.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.permissions[0]).to.eql({",
              "  \"role\": \"ADMIN\",",
              "  \"links\": {",
              "    \"organisations\": pm.environment.get(\"tenant1.id\"),",
              "    \"users\": pm.environment.get(\"ash.id\")",
              "  },",
              "  \"id\": pm.environment.get(\"ashPermission.id\")",
              "});",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"permissions\": {\n    \"role\": \"ADMIN\",\n    \"links\": {\n      \"organisations\": \"{{tenant1.id}}\",\n      \"users\": \"{{ash.id}}\"\n    },\n    \"id\": \"{{ashPermission.id}}\"\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/permissions/{{ashPermission.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "permissions",
            "{{ashPermission.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PATCH /v1/permissions/{{maxPermission.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.permissions[0]).to.eql({",
              "  \"role\": \"USER\",",
              "  \"links\": {",
              "    \"organisations\": pm.environment.get(\"tenant2.id\"),",
              "    \"users\": pm.environment.get(\"max.id\")",
              "  },",
              "  \"id\": pm.environment.get(\"maxPermission.id\")",
              "});",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"permissions\": {\n    \"role\": \"USER\",\n    \"links\": {\n      \"organisations\": \"{{tenant2.id}}\",\n      \"users\": \"{{max.id}}\"\n    },\n    \"id\": \"{{maxPermission.id}}\"\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/permissions/{{maxPermission.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "permissions",
            "{{maxPermission.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PATCH /v1/permissions/{{ronaldPermission.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.permissions[0]).to.eql({",
              "  \"role\": \"USER\",",
              "  \"links\": {",
              "    \"organisations\": pm.environment.get(\"tenant1.id\"),",
              "    \"users\": pm.environment.get(\"ronald.id\")",
              "  },",
              "  \"id\": pm.environment.get(\"ronaldPermission.id\")",
              "});",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"permissions\": {\n    \"role\": \"USER\",\n    \"links\": {\n      \"organisations\": \"{{tenant1.id}}\",\n      \"users\": \"{{ronald.id}}\"\n    },\n    \"id\": \"{{ronaldPermission.id}}\"\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/permissions/{{ronaldPermission.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "permissions",
            "{{ronaldPermission.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PATCH /v1/permissions/{{ronaldPermission2.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.permissions[0]).to.eql({",
              "  \"role\": \"ADMIN\",",
              "  \"links\": {",
              "    \"organisations\": pm.environment.get(\"tenant2.id\"),",
              "    \"users\": pm.environment.get(\"ronald.id\")",
              "  },",
              "  \"id\": pm.environment.get(\"ronaldPermission2.id\")",
              "});",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"permissions\": {\n    \"role\": \"ADMIN\",\n    \"links\": {\n      \"organisations\": \"{{tenant2.id}}\",\n      \"users\": \"{{ronald.id}}\"\n    },\n    \"id\": \"{{ronaldPermission2.id}}\"\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/permissions/{{ronaldPermission2.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "permissions",
            "{{ronaldPermission2.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PATCH /v1/account-{{tenant1}}/tags/{{t1tag1.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.tags[0]).to.eql({",
              "  \"name\": \"Accounts\",",
              "  \"config\": {",
              "    \"language\": \"en\"",
              "  },",
              "  \"links\": {",
              "    \"organisations\": pm.environment.get(\"tenant1.id\")",
              "  },",
              "  \"id\": pm.environment.get(\"t1tag1.id\")",
              "});",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"tags\": {\n    \"name\": \"Accounts\",\n    \"config\": {\n      \"language\": \"en\"\n    },\n    \"links\": {\n      \"organisations\": \"{{tenant1.id}}\"\n    },\n    \"id\": \"{{t1tag1.id}}\"\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/account-{{tenant1}}/tags/{{t1tag1.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "account-{{tenant1}}",
            "tags",
            "{{t1tag1.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PATCH /v1/account-{{tenant1}}/tags/{{t1tag2.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.tags[0]).to.eql({",
              "  \"name\": \"Sales\",",
              "  \"config\": {",
              "    \"language\": \"en\"",
              "  },",
              "  \"links\": {",
              "    \"organisations\": pm.environment.get(\"tenant1.id\")",
              "  },",
              "  \"id\": pm.environment.get(\"t1tag2.id\")",
              "});",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"tags\": {\n    \"name\": \"Sales\",\n    \"config\": {\n      \"language\": \"en\"\n    },\n    \"links\": {\n      \"organisations\": \"{{tenant1.id}}\"\n    },\n    \"id\": \"{{t1tag2.id}}\"\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/account-{{tenant1}}/tags/{{t1tag2.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "account-{{tenant1}}",
            "tags",
            "{{t1tag2.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PATCH /v1/account-{{tenant2}}/tags/{{t2tag1.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.tags[0]).to.eql({",
              "  \"name\": \"Accounts\",",
              "  \"config\": {",
              "    \"language\": \"en\"",
              "  },",
              "  \"links\": {",
              "    \"organisations\": pm.environment.get(\"tenant2.id\")",
              "  },",
              "  \"id\": pm.environment.get(\"t2tag1.id\")",
              "});",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"tags\": {\n    \"name\": \"Accounts\",\n    \"config\": {\n      \"language\": \"en\"\n    },\n    \"links\": {\n      \"organisations\": \"{{tenant2.id}}\"\n    },\n    \"id\": \"{{t2tag1.id}}\"\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/account-{{tenant2}}/tags/{{t2tag1.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "account-{{tenant2}}",
            "tags",
            "{{t2tag1.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PATCH /v1/account-{{tenant2}}/tags/{{t2tag3.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.tags[0]).to.eql({",
              "  \"name\": \"Marketing\",",
              "  \"config\": {",
              "    \"language\": \"en\"",
              "  },",
              "  \"links\": {",
              "    \"organisations\": pm.environment.get(\"tenant2.id\")",
              "  },",
              "  \"id\": pm.environment.get(\"t2tag3.id\")",
              "});",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"tags\": {\n    \"name\": \"Marketing\",\n    \"config\": {\n      \"language\": \"en\"\n    },\n    \"links\": {\n      \"organisations\": \"{{tenant2.id}}\"\n    },\n    \"id\": \"{{t2tag3.id}}\"\n  }\n}"
        },
        "url": {
          "raw": "{{URL}}/v1/account-{{tenant2}}/tags/{{t2tag3.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "account-{{tenant2}}",
            "tags",
            "{{t2tag3.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /v1/organisations",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.organisations.map((e) => e.id)).to.eql([",
              "  pm.environment.get(\"tenant1.id\"),",
              "  pm.environment.get(\"tenant2.id\"),",
              "  pm.environment.get(\"tenant3.id\")",
              "]);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/organisations",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "organisations"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /v1/users",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.users.map((e) => e.id)).to.eql([",
              "  pm.environment.get(\"ash.id\"),",
              "  pm.environment.get(\"max.id\"),",
              "  pm.environment.get(\"ronie.id\"),",
              "  pm.environment.get(\"ronald.id\")",
              "]);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/users",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /v1/permissions",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.permissions.map((e) => e.id)).to.eql([",
              "  pm.environment.get(\"ashPermission.id\"),",
              "  pm.environment.get(\"maxPermission.id\"),",
              "  pm.environment.get(\"ronaldPermission.id\"),",
              "  pm.environment.get(\"ronaldPermission2.id\")",
              "]);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/permissions",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "permissions"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /v1/account-{{tenant1}}/tags",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.tags.map((e) => e.id)).to.eql([",
              "  pm.environment.get(\"t1tag1.id\"),",
              "  pm.environment.get(\"t1tag2.id\")",
              "]);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/account-{{tenant1}}/tags",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "account-{{tenant1}}",
            "tags"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /v1/account-{{tenant2}}/tags",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"response body is valid\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.tags.map((e) => e.id)).to.eql([",
              "  pm.environment.get(\"t2tag1.id\"),",
              "  pm.environment.get(\"t2tag3.id\")",
              "]);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/account-{{tenant2}}/tags",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "account-{{tenant2}}",
            "tags"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /v1/organisations/{{tenant1.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", () => {",
              "  pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/organisations/{{tenant1.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "organisations",
            "{{tenant1.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /v1/organisations/{{tenant2.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", () => {",
              "  pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/organisations/{{tenant2.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "organisations",
            "{{tenant2.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /v1/organisations/{{tenant3.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", () => {",
              "  pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/organisations/{{tenant3.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "organisations",
            "{{tenant3.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /v1/users/{{ash.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", () => {",
              "  pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/users/{{ash.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "users",
            "{{ash.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /v1/users/{{max.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", () => {",
              "  pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/users/{{max.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "users",
            "{{max.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /v1/users/{{ronie.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", () => {",
              "  pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/users/{{ronie.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "users",
            "{{ronie.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /v1/users/{{ronald.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", () => {",
              "  pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/users/{{ronald.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "users",
            "{{ronald.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /v1/permissions/{{ashPermission.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", () => {",
              "  pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/permissions/{{ashPermission.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "permissions",
            "{{ashPermission.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /v1/permissions/{{maxPermission.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", () => {",
              "  pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/permissions/{{maxPermission.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "permissions",
            "{{maxPermission.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /v1/permissions/{{ronaldPermission.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", () => {",
              "  pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/permissions/{{ronaldPermission.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "permissions",
            "{{ronaldPermission.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /v1/permissions/{{ronaldPermission2.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", () => {",
              "  pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/permissions/{{ronaldPermission2.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "permissions",
            "{{ronaldPermission2.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /v1/account-{{tenant1}}/tags/{{t1tag1.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", () => {",
              "  pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/account-{{tenant1}}/tags/{{t1tag1.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "account-{{tenant1}}",
            "tags",
            "{{t1tag1.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /v1/account-{{tenant1}}/tags/{{t1tag2.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", () => {",
              "  pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/account-{{tenant1}}/tags/{{t1tag2.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "account-{{tenant1}}",
            "tags",
            "{{t1tag2.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /v1/account-{{tenant2}}/tags/{{t2tag1.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", () => {",
              "  pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/account-{{tenant2}}/tags/{{t2tag1.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "account-{{tenant2}}",
            "tags",
            "{{t2tag1.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /v1/account-{{tenant2}}/tags/{{t2tag3.id}}",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", () => {",
              "  pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/account-{{tenant2}}/tags/{{t2tag3.id}}",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "account-{{tenant2}}",
            "tags",
            "{{t2tag3.id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /v1/organisations",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", () => {",
              "  pm.response.to.have.status(404);",
              "});",
              "",
              "pm.test(\"response body is error message\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData).to.eql({",
              "    \"errors\": [",
              "      {",
              "        \"status\": \"404\",",
              "        \"title\": \"Not Found\",",
              "        \"detail\": \"No matching record found\",",
              "        \"code\": \"E0015\",",
              "        \"meta\": \"E0015:No matching record found\"",
              "      }",
              "    ]",
              "  });",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/organisations",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "organisations"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /v1/users",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", () => {",
              "  pm.response.to.have.status(404);",
              "});",
              "",
              "pm.test(\"response body is error message\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData).to.eql({",
              "    \"errors\": [",
              "      {",
              "        \"status\": \"404\",",
              "        \"title\": \"Not Found\",",
              "        \"detail\": \"No matching record found\",",
              "        \"code\": \"E0015\",",
              "        \"meta\": \"E0015:No matching record found\"",
              "      }",
              "    ]",
              "  });",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/users",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /v1/permissions",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", () => {",
              "  pm.response.to.have.status(404);",
              "});",
              "",
              "pm.test(\"response body is error message\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData).to.eql({",
              "    \"errors\": [",
              "      {",
              "        \"status\": \"404\",",
              "        \"title\": \"Not Found\",",
              "        \"detail\": \"No matching record found\",",
              "        \"code\": \"E0015\",",
              "        \"meta\": \"E0015:No matching record found\"",
              "      }",
              "    ]",
              "  });",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/permissions",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "permissions"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /v1/account-{{tenant1}}/tags",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", () => {",
              "  pm.response.to.have.status(404);",
              "});",
              "",
              "pm.test(\"response body is error message\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData).to.eql({",
              "    \"errors\": [",
              "      {",
              "        \"status\": \"404\",",
              "        \"title\": \"Not Found\",",
              "        \"detail\": \"No matching record found\",",
              "        \"code\": \"E0015\",",
              "        \"meta\": \"E0015:No matching record found\"",
              "      }",
              "    ]",
              "  });",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/account-{{tenant1}}/tags",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "account-{{tenant1}}",
            "tags"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /v1/account-{{tenant2}}/tags",
      "event": [
        {
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", () => {",
              "  pm.response.to.have.status(404);",
              "});",
              "",
              "pm.test(\"response body is error message\", () => {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData).to.eql({",
              "    \"errors\": [",
              "      {",
              "        \"status\": \"404\",",
              "        \"title\": \"Not Found\",",
              "        \"detail\": \"No matching record found\",",
              "        \"code\": \"E0015\",",
              "        \"meta\": \"E0015:No matching record found\"",
              "      }",
              "    ]",
              "  });",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{URL}}/v1/account-{{tenant2}}/tags",
          "host": [
            "{{URL}}"
          ],
          "path": [
            "v1",
            "account-{{tenant2}}",
            "tags"
          ]
        }
      },
      "response": []
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{JWT}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "83d463fa-b8c5-4c80-aec0-c95b95bb6247",
        "type": "text/javascript",
        "exec": [
          "function base64url(source) {",
          "  // Encode in classical base64",
          "  let encodedSource = CryptoJS.enc.Base64.stringify(source);",
          "",
          "  // Remove padding equal characters",
          "  encodedSource = encodedSource.replace(/=+$/, '');",
          "",
          "  // Replace characters according to base64url specifications",
          "  encodedSource = encodedSource.replace(/\\+/g, '-');",
          "  encodedSource = encodedSource.replace(/\\//g, '_');",
          "",
          "  return encodedSource;",
          "}",
          "",
          "function addIAT() {",
          "  return Math.floor(Date.now() / 1000) + 257;",
          "}",
          "",
          "const header = {",
          "  typ: 'JWT',",
          "  alg: 'HS256',",
          "};",
          "",
          "const jwtBody = {",
          "  iss: pm.environment.get('API_ISSUER'),",
          "  iat: addIAT(),",
          "};",
          "",
          "const secret = atob(pm.environment.get('API_KEY'));",
          "",
          "// encode header",
          "const stringifiedHeader = CryptoJS.enc.Utf8.parse(JSON.stringify(header));",
          "const encodedHeader = base64url(stringifiedHeader);",
          "",
          "// encode jwtBody",
          "const stringifiedData = CryptoJS.enc.Utf8.parse(JSON.stringify(jwtBody));",
          "const encodedData = base64url(stringifiedData);",
          "",
          "// build token",
          "const token = `${encodedHeader}.${encodedData}`;",
          "",
          "// sign token",
          "let signature = CryptoJS.HmacSHA256(token, secret);",
          "signature = base64url(signature);",
          "const signedToken = `${token}.${signature}`;",
          "",
          "postman.setEnvironmentVariable('JWT', signedToken);",
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}
